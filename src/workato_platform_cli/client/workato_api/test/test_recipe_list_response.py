# coding: utf-8

"""
    Workato Platform API

    Official Workato Platform API for managing recipes, connections, projects, and other automation resources.  ## Authentication All endpoints require a Bearer token in the Authorization header.  ## Base URL The base URL varies by region: - US: `https://www.workato.com` - EU: `https://app.eu.workato.com` - JP: `https://app.jp.workato.com` - SG: `https://app.sg.workato.com` - AU: `https://app.au.workato.com` - IL: `https://app.il.workato.com` - Trial: `https://app.trial.workato.com` 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from workato_platform.client.workato_api.models.recipe_list_response import RecipeListResponse

class TestRecipeListResponse(unittest.TestCase):
    """RecipeListResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RecipeListResponse:
        """Test RecipeListResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RecipeListResponse`
        """
        model = RecipeListResponse()
        if include_optional:
            return RecipeListResponse(
                items = [
                    workato_platform.client.workato_api.models.recipe.Recipe(
                        id = 1913515, 
                        user_id = 4848, 
                        name = 'Callable service: JIRA ticket sync', 
                        created_at = '2021-11-25T07:07:38.568-08:00', 
                        updated_at = '2021-11-25T07:14:40.822-08:00', 
                        copy_count = 1, 
                        trigger_application = 'workato_service', 
                        action_applications = ["jira"], 
                        applications = ["workato_service","jira"], 
                        description = 'When there is a new call for callable recipe, do action', 
                        parameters_schema = [
                            null
                            ], 
                        parameters = workato_platform.client.workato_api.models.parameters.parameters(), 
                        webhook_url = '', 
                        folder_id = 241557, 
                        running = False, 
                        job_succeeded_count = 1, 
                        job_failed_count = 0, 
                        lifetime_task_count = 1, 
                        last_run_at = '2021-11-25T07:10:27.424-08:00', 
                        stopped_at = '2021-11-25T07:11:06.346-08:00', 
                        version_no = 3, 
                        stop_cause = '', 
                        config = [
                            workato_platform.client.workato_api.models.recipe_config_inner.Recipe_config_inner(
                                keyword = 'application', 
                                name = 'workato_service', 
                                provider = 'workato_service', 
                                skip_validation = False, 
                                account_id = 56, )
                            ], 
                        trigger_closure = null, 
                        code = '', 
                        author_name = 'Alex Fisher', 
                        version_author_name = 'Alex Fisher', 
                        version_author_email = 'alex.fisher@example.com', 
                        version_comment = '', 
                        tags = ["tag-ANMNxAz9-oYDJRm","tag-ANgeffPL-3gxQwA"], )
                    ]
            )
        else:
            return RecipeListResponse(
                items = [
                    workato_platform.client.workato_api.models.recipe.Recipe(
                        id = 1913515, 
                        user_id = 4848, 
                        name = 'Callable service: JIRA ticket sync', 
                        created_at = '2021-11-25T07:07:38.568-08:00', 
                        updated_at = '2021-11-25T07:14:40.822-08:00', 
                        copy_count = 1, 
                        trigger_application = 'workato_service', 
                        action_applications = ["jira"], 
                        applications = ["workato_service","jira"], 
                        description = 'When there is a new call for callable recipe, do action', 
                        parameters_schema = [
                            null
                            ], 
                        parameters = workato_platform.client.workato_api.models.parameters.parameters(), 
                        webhook_url = '', 
                        folder_id = 241557, 
                        running = False, 
                        job_succeeded_count = 1, 
                        job_failed_count = 0, 
                        lifetime_task_count = 1, 
                        last_run_at = '2021-11-25T07:10:27.424-08:00', 
                        stopped_at = '2021-11-25T07:11:06.346-08:00', 
                        version_no = 3, 
                        stop_cause = '', 
                        config = [
                            workato_platform.client.workato_api.models.recipe_config_inner.Recipe_config_inner(
                                keyword = 'application', 
                                name = 'workato_service', 
                                provider = 'workato_service', 
                                skip_validation = False, 
                                account_id = 56, )
                            ], 
                        trigger_closure = null, 
                        code = '', 
                        author_name = 'Alex Fisher', 
                        version_author_name = 'Alex Fisher', 
                        version_author_email = 'alex.fisher@example.com', 
                        version_comment = '', 
                        tags = ["tag-ANMNxAz9-oYDJRm","tag-ANgeffPL-3gxQwA"], )
                    ],
        )
        """

    def testRecipeListResponse(self):
        """Test RecipeListResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
