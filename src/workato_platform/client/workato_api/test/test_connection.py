# coding: utf-8

"""
    Workato Platform API

    Official Workato Platform API for managing recipes, connections, projects, and other automation resources.  ## Authentication All endpoints require a Bearer token in the Authorization header.  ## Base URL The base URL varies by region: - US: `https://www.workato.com` - EU: `https://app.eu.workato.com` - JP: `https://app.jp.workato.com` - SG: `https://app.sg.workato.com` - AU: `https://app.au.workato.com` - IL: `https://app.il.workato.com` - Trial: `https://app.trial.workato.com`

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from workato_platform.client.workato_api.models.connection import Connection

class TestConnection(unittest.TestCase):
    """Connection unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Connection:
        """Test Connection
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Connection`
        """
        model = Connection()
        if include_optional:
            return Connection(
                id = 36,
                application = 'salesforce',
                name = 'ACME Production Salesforce connection',
                description = '',
                authorized_at = '2015-05-26T22:53:52.528Z',
                authorization_status = 'success',
                authorization_error = '',
                created_at = '2015-05-26T22:53:52.532Z',
                updated_at = '2015-05-26T22:53:52.532Z',
                external_id = '',
                folder_id = 4515,
                connection_lost_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                connection_lost_reason = '',
                parent_id = 56,
                provider = 'jira',
                tags = ["tag-ANgeffPL-3gxQwA"]
            )
        else:
            return Connection(
                id = 36,
                application = 'salesforce',
                name = 'ACME Production Salesforce connection',
                description = '',
                authorized_at = '2015-05-26T22:53:52.528Z',
                authorization_status = 'success',
                authorization_error = '',
                created_at = '2015-05-26T22:53:52.532Z',
                updated_at = '2015-05-26T22:53:52.532Z',
                external_id = '',
                folder_id = 4515,
                connection_lost_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                connection_lost_reason = '',
                parent_id = 56,
                tags = ["tag-ANgeffPL-3gxQwA"],
        )
        """

    def testConnection(self):
        """Test Connection"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
