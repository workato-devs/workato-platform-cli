# coding: utf-8

"""
    Workato Platform API

    Official Workato Platform API for managing recipes, connections, projects, and other automation resources.  ## Authentication All endpoints require a Bearer token in the Authorization header.  ## Base URL The base URL varies by region: - US: `https://www.workato.com` - EU: `https://app.eu.workato.com` - JP: `https://app.jp.workato.com` - SG: `https://app.sg.workato.com` - AU: `https://app.au.workato.com` - IL: `https://app.il.workato.com` - Trial: `https://app.trial.workato.com` 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from workato_platform.client.workato_api.models.connector_action import ConnectorAction

class TestConnectorAction(unittest.TestCase):
    """ConnectorAction unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ConnectorAction:
        """Test ConnectorAction
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ConnectorAction`
        """
        model = ConnectorAction()
        if include_optional:
            return ConnectorAction(
                name = 'new_entry',
                title = 'New entry',
                deprecated = False,
                bulk = False,
                batch = False
            )
        else:
            return ConnectorAction(
                name = 'new_entry',
                title = 'New entry',
                deprecated = False,
                bulk = False,
                batch = False,
        )
        """

    def testConnectorAction(self):
        """Test ConnectorAction"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
